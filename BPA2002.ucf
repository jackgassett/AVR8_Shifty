##################################################################################
## BPA2002.ucf
##
## Author: Jack Gassett
##
## Details: http://www.gadgetfactory.net/gf/project/butterflyflight/
##
## Contains assignment and iostandard information for
## all used pins as well as timing and area constraints for Butterfly Flight and BPA2002 Wing Adapter.
##
##################################################################################

# Crystal Clock - use 8MHz onboard oscillator
NET "clk" LOC = "P91" | IOSTANDARD = LVCMOS25 | PERIOD = 125ns ;

# Wing1 Column A
NET "porta<0>" LOC = "P94" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_4
NET "porta<1>" LOC = "P98" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConA_8
NET "porta<2>" LOC = "P2" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConA_12
NET "porta<3>" LOC = "P4" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConA_14
NET "porta<4>" LOC = "P9" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConA_16
NET "porta<5>" LOC = "P11" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConA_18
NET "porta<6>" LOC = "P15" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConA_19
NET "porta<7>" LOC = "P17" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConA_21
#NET "portb<9>" LOC = "P22" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConA_23
#NET "portb<10>" LOC = "P24" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;   #ConA_25
#NET "portb<11>" LOC = "P26" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_27
#NET "portb<12>" LOC = "P33" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_31
#NET "portb<13>" LOC = "P35" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_33
#NET "portb<14>" LOC = "P36" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_36
#NET "portb<15>" LOC = "P42" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_39
#NET "portb<16>" LOC = "P41" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_40
#
## Wing1 Column B
NET "portb<0>" LOC = "P44" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_1
NET "portb<1>" LOC = "P40" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_37
NET "portb<2>" LOC = "P34" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_34
NET "portb<3>" LOC = "P32" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_32
NET "portb<4>" LOC = "P27" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_30
NET "portb<5>" LOC = "P25" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_28
NET "portb<6>" LOC = "P23" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_26
NET "portb<7>" LOC = "P18" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_24
#NET "W1B<9>" LOC = "P16" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_22
#NET "W1B<10>" LOC = "P12" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_17
#NET "W1B<11>" LOC = "P10" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_15
#NET "W1B<12>" LOC = "P5" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_13
#NET "W1B<13>" LOC = "P3" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_11
#NET "W1B<14>" LOC = "P99" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_10
#NET "W1B<15>" LOC = "P95" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_6
#NET "W1B<16>" LOC = "P92" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConA_2
#
## Wing2 Column A
#NET "W2A<1>" LOC = "P43" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_2
#NET "W2A<2>" LOC = "P48" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConB_3
#NET "W2A<3>" LOC = "P47" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConB_4
#NET "W2A<4>" LOC = "P49" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConB_6
#NET "W2A<5>" LOC = "P50" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConB_5
#NET "W2A<6>" LOC = "P53" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConB_8
#NET "W2A<7>" LOC = "P54" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConB_7
#NET "W2A<8>" LOC = "P57" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConB_10
#NET "W2A<9>" LOC = "P60" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;  	#ConB_12
#NET "W2A<10>" LOC = "P62" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;   #ConB_14
#NET "W2A<11>" LOC = "P63" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_13
#NET "W2A<12>" LOC = "P66" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_15
#NET "W2A<13>" LOC = "P70" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_19
#NET "W2A<14>" LOC = "P78" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_24
#NET "W2A<15>" LOC = "P83" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_26
#NET "W2A<16>" LOC = "P85" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_28
#
## Wing2 Column B
#NET "W2B<1>" LOC = "P84" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_25
#NET "W2B<2>" LOC = "P79" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_23
#NET "W2B<3>" LOC = "P71" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_22
#NET "W2B<4>" LOC = "P68" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_17
#NET "W2B<5>" LOC = "P67" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_18
#NET "W2B<6>" LOC = "P65" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_16
#NET "W2B<7>" LOC = "P61" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_11
#NET "W2B<8>" LOC = "P58" | IOSTANDARD = LVCMOS25 | SLEW = FAST | DRIVE = 8 ;	#ConB_9

## RS232
NET "rxd"  LOC = "P90" | IOSTANDARD = LVCMOS25 ;
NET "txd"  LOC = "P86" | IOSTANDARD = LVCMOS25 | DRIVE = 4 | SLEW = SLOW ;


INST PM_Inst/RAM_Inst[0].RAM_Word INIT_00  = 0000F4CF85958595990B990F892F932F822F3F4F2F5F88BB8BBB87BB8ABB8FEF;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_01  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_02  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_03  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_04  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_05  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_06  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_07  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_08  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_09  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_0A  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_0B  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_0C  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_0D  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_0E  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_0F  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_10  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_11  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_12  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_13  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_14  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_15  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_16  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_17  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_18  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_19  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_1A  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_1B  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_1C  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_1D  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_1E  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_1F  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_20  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_21  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_22  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_23  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_24  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_25  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_26  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_27  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_28  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_29  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_2A  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_2B  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_2C  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_2D  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_2E  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_2F  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_30  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_31  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_32  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_33  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_34  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_35  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_36  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_37  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_38  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_39  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_3A  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_3B  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_3C  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_3D  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_3E  = 0000000000000000000000000000000000000000000000000000000000000000;
INST PM_Inst/RAM_Inst[0].RAM_Word INIT_3F  = 0000000000000000000000000000000000000000000000000000000000000000;